<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<bean id="handler" class="com.iconnect.profiling.handler.CustomHandler">
		<property name="url" value="deniedpage"></property>
	</bean>
	<security:http auto-config="true">

		<security:intercept-url pattern="/welcome*"
			access="ROLE_SUPERUSER" />
		<security:session-management>
			<security:concurrency-control
				max-sessions="1" expired-url="/sessiontimeout" />
		</security:session-management>
		<security:access-denied-handler ref="handler" />
		<security:form-login login-page="/loginform"
			default-target-url="/welcome" authentication-failure-url="/failure"/>
		

		<security:logout logout-success-url="/logout"
			invalidate-session="true" />
	</security:http>
	<bean id="salt"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<security:authentication-manager>
		<security:authentication-provider
			user-service-ref="service">
		<security:password-encoder hash="bcrypt" ref="salt"/>
		</security:authentication-provider>
	</security:authentication-manager>
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<!-- <security:authentication-manager> <security:authentication-provider 
		user-service-ref="customUserDetailsService"> <security:password-encoder ref="passwordEncoder" 
		/> </security:authentication-provider> </security:authentication-manager> -->
	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the 
		database -->
	<!-- <bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" 
		id="passwordEncoder"/> -->

	<!-- A custom service where Spring will retrieve users and their corresponding 
		access levels -->
	<!-- <bean id="customUserDetailsService" class=""/> -->




</beans>
